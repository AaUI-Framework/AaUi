
%columns {
  position: relative;
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
}

.grid {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px;
}

@function width($i){
  @return 100% / 12 * $i;
}

@function width-grid($id){
  @return 100% / $id;
}

@mixin column-props($i){
  -ms-flex: 0 0 width($i);
  flex: 0 0 width($i);
  max-width: width($i);
}

@mixin column-off($i){
  margin-left: width($i);
}

@mixin columns-grid($i){
  -ms-flex: 0 0 width-grid($i);
  flex: 0 0 width-grid($i);
  max-width: width-grid($i);
}

@mixin column($names, $screen, $extend){
  @each $name, $i in $names {
    @if $extend == false {
      @if $screen != false {
        .c#{$i}\@#{$screen}{
          @include column-props($i)
        }
        .off-c#{$i}\@#{$screen}{
          @include column-off($i)
        }
        .grid.#{$name}\@#{$screen} .column{
          @include columns-grid($i)
        }
      }
      @else {
        .c#{$i}{
          @include column-props($i)
        }
        .grid.#{$name} .column{
          @include columns-grid($i)
        }
        .off-#{$i}{
          @include column-off($i)
        }
      }
    }
    @else {
      @if $screen != null {
        .c#{$i}\@#{$screen}{
          @extend %columns;
        }
        .grid.#{$name}\@#{$screen} .column{
          @extend %columns;
        }
      }
      @else {
        .grid.#{$name} .column{
          @extend %columns;
        }
        .c#{$i}{
          @extend %columns;
        }
      }
    }
  }
}

@include column($numbers, null,true);
@include column($numbers, xs,true);
@include column($numbers, sm,true);
@include column($numbers, md,true);
@include column($numbers, lg,true);

@include column($numbers, false, false);